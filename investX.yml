swagger: '2.0'
info:
  description: This is a simple API
  version: 1.0.0
  title: Simple Inventory API
  # put the contact info for your development or API team
  contact:
    email: you@your-company.com

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

# tags are used for organizing operations
tags:
  - name: clientes
    description: Operações relacionadas ao clientes
  - name: produtos
    description: Operações relacionadas aos produtos
  - name: acoes
    description: Operações relacionadas a ações
  - name: bitcoins
    description: Operações relacionadas a bitcoins

paths:
  /clientes:
    post:
      tags:
        - clientes
      summary: add an cliente
      operationId: addCliente
      description: Add an cliente to the system
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Cliente
          description: Cliente to add
          schema:
            $ref: '#/definitions/Cliente'
      responses:
        201:
          description: cliente created
        400:
          description: invalid input, object invalid
        409:
          description: an existing cliente already exists
  /clientes/clienteId:
    get:
      tags:
        - clientes
      summary: searches inventory
      operationId: searchInventory
      description: Get cliente
      produces:
        - application/json
      parameters:
        - in: query
          name: searchString
          description: pass an optional search string for looking up inventory
          required: false
          type: string
        - in: query
          name: skip
          description: number of records to skip for pagination
          type: integer
          format: int32
          minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          type: integer
          format: int32
          minimum: 0
          maximum: 50
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Cliente'
        400:
          description: bad input parameter
  /clientes/cadastrar:
    post:
      tags:
        - clientes
      summary: cadastrar novo cliente na plataforma
      operationId: signupClient
      description: Obtém os ações do usuário
      produces:
        - application/json
      parameters: []
      responses:
        200:
          description: successful operation
        400:
          description: bad input parameter
  /produtos:
    get:
      tags:
        - produtos
      summary: Retorna todos os produtos disponíveis na plataforma
      operationId: getProducts
      description: Obtém produtos do usuário
      produces:
        - application/json
      parameters: []
      responses:
        200:
          description: successful operation
        400:
          description: bad input parameter
  /produtos/cadastrar:
    post:
      tags:
        - produtos
      summary: Inclui novo produto na plaforma
      operationId: storeProduct
      description: Novo produto
      produces:
        - application/json
      parameters: []
      responses:
        200:
          description: successful operation
        400:
          description: bad input parameter
  /acoes:
    get:
      tags:
        - acoes
      summary: obtenção de ações do usuário
      operationId: getAcoes
      description: Obtém os ações do usuário
      produces:
        - application/json
      parameters: []
      responses:
        200:
          description: successful operation
        400:
          description: bad input parameter
  /acoes/vender:
    post:
      tags:
        - acoes
      summary: Realiza venda de ações
      description: Retorna o sucesso da venda
      operationId: venderAcoes
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Campos de venda
          required: true
          schema:
            $ref: '#/definitions/Acoes'
      responses:
        default:
          description: successful operation
  /acoes/comprar:
    post:
      tags:
        - acoes
      summary: Realiza compra de ações
      description: Retorna o sucesso da compra
      operationId: comprarAcoes
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Campos de compra
          required: true
          schema:
            $ref: '#/definitions/Acoes'
      responses:
        default:
          description: successful operation
  /bitcoins:
    get:
      tags:
        - bitcoins
      summary: obtenção de bitcoins do usuário
      operationId: getBitcoins
      description: Obtém os bitcoins do usuário
      produces:
        - application/json
      parameters: []
      responses:
        200:
          description: successful operation
        400:
          description: bad input parameter
  /bitcoins/vender:
    post:
      tags:
        - bitcoins
      summary: Realiza venda de bitcoins
      description: Retorna o sucesso da venda de bitcoins
      operationId: venderBitcoins
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Campos de venda
          required: true
          schema:
            $ref: '#/definitions/Bitcoins'
      responses:
        default:
          description: successful operation
  /bitcoins/comprar:
    post:
      tags:
        - bitcoins
      summary: Realiza compra de bitcoins
      description: Retorna o sucesso da compra de bitcoins
      operationId: comprarBitcoins
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Campos de compra
          required: true
          schema:
            $ref: '#/definitions/Bitcoins'
      responses:
        default:
          description: successful operation

definitions:
  Cliente:
    type: object
    properties:
      id:
        type: integer
        format: int64
  Produto:
    type: object
    properties:
      id:
        type: integer
        format: int64
  Acoes:
    type: object
    properties:
      ativo:
        type: string
      quantidade:
        type: integer
        format: int64
      valor:
        type: number
        format: float
  Bitcoins:
    type: object
    properties:
      quantidade:
        type: integer
        format: int64
      valor:
        type: number
        format: float
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
# basePath: /bruno.silva/InvestX/1.0.0
schemes:
  - https
# Added by API Auto Mocking Plugin
basePath: /ramuspedro/investx/1.0.0
